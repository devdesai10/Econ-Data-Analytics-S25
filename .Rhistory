#creating rpart plot for decision tree
#aswell as a page for information
infoPageB <- rpart(tripduration~Day+Hour+Minute,data=citybike.train,cp=0.001,minbucket=20)
rpart.plot(infoPageB)
#using as.numeric on 10000B
citybike.test10000B$Hour <- as.numeric(substr(citybike.test10000B$starttime,12,13))
citybike.test10000B$Minute <- as.numeric(substr(citybike.test10000B$starttime,15,16))
citybike.test10000B$Day <- as.numeric(substr(citybike.test10000B$starttime,9,10))
#using the predict and writecsv functions
PredictionsFinal <- predict(infoPageB,citybike.test10000B)
write.csv(PredictionsFinal,file="PredictionFinal.B")
printcp(infoPageB)
library(rpart)
library(rpart.plot)
library(RColorBrewer)
#using as.numeric on .train
citybike.train$Hour <- as.numeric(substr(citybike.train$starttime,12,13))
citybike.train$Minute <- as.numeric(substr(citybike.train$starttime,15,16))
citybike.train$Day <- as.numeric(substr(citybike.train$starttime,9,10))
#creating rpart plot for decision tree
#aswell as a page for information
infoPageB <- rpart(tripduration~Day+Hour+Minute,data=citybike.train,cp=0.001,minbucket=20)
rpart.plot(infoPageB)
#using as.numeric on 10000B
citybike.test10000B$Hour <- as.numeric(substr(citybike.test10000B$starttime,12,13))
citybike.test10000B$Minute <- as.numeric(substr(citybike.test10000B$starttime,15,16))
citybike.test10000B$Day <- as.numeric(substr(citybike.test10000B$starttime,9,10))
#using the predict and writecsv functions
PredictionsFinal <- predict(infoPageB,citybike.test10000B)
write.csv(PredictionsFinal,file="PredictionFinal.B.csv")
printcp(infoPageB)
library(rpart)
library(rpart.plot)
library(RColorBrewer)
#using as.numeric on .train
citybike.train$Hour <- as.numeric(substr(citybike.train$starttime,12,13))
citybike.train$Minute <- as.numeric(substr(citybike.train$starttime,15,16))
citybike.train$Day <- as.numeric(substr(citybike.train$starttime,9,10))
#Creating rpart plot for decision tree
#creating an info page with rpart
infoPageA <- rpart(tripduration~Day+Hour+Minute,data=citybike.train,cp=0.001,minbucket=20)
rpart.plot(infoPageA)
printcp(infoPageA)
#using as.numeric on 10000A
citybike.test10000A$Hour <- as.numeric(substr(citybike.test10000A$starttime,12,13))
citybike.test10000A$Minute <- as.numeric(substr(citybike.test10000A$starttime,15,16))
citybike.test10000A$Day <- as.numeric(substr(citybike.test10000A$starttime,9,10))
#Use predict function and write csv function
citybike.test10000A.predicions <- predict(infoPageA,citybike.test10000A)
write.csv(citybike.test10000A.predicions,file="PredictionsFinalA.csv")
printcp(infoPageA)
install.packages("ggplot2")
library(ggplot2)
#Set a working directory
setwd("~/Users/devandesai/Desktop/Econ Data Analytics")
gc()
setwd("~/Documents/GitHub/Econ-Data-Analytics")
setwd("~/Documents/GitHub/Econ-Data-Analytics")
ggplot(tesla, aes(x=date, y=return)) +
geom_line() +
theme(legend.position= "bottom") +
labs(title = "Tesla returns",
subtitle = "(daily)",
x = "Date",
y = "Percent",
caption = "Source: https://www.nasdaq.com/")  +
theme(plot.title= element_text(hjust= 0.5),
plot.subtitle= element_text(hjust= 0.5),
axis.text.x= element_text(angle = 45, hjust= 1)) +
scale_x_date(limits = c(min(tesla$date), max(tesla$date)),
breaks = seq(min(tesla$date), max(tesla$date), by = 7) )
library(readxl)
Lesson01_Tesla <- read_excel("Lesson01-Tesla.xlsx")
View(Lesson01_Tesla)
tesla <- read_excel("Lesson01-Tesla.xlsx")
View(tesla)
library(readxl)
tesla <- read_excel("Lesson01-Tesla.xlsx")
View(tesla)
tesla <- read_excel("Lesson01-Tesla.xlsx")
tesla$date = as.Date(tesla$Date, "%Y/%m/%D")
tesla <- tesla[order(tesla$date), ]
tesla$price = tesla$`Close/Last`
library(dplyr)
install.packages("dplyr")
library(dplyr)
tesla$lag1_price = lag(tesla$price, n=1, order_by = tesla$date)
install.packages("plotly")
range(tesla$date)
ggplot(tesla, aes(x=date, y=return)) +
geom_line() +
theme(legend.position= "bottom") +
labs(title = "Tesla returns",
subtitle = "(daily)",
x = "Date",
y = "Percent",
caption = "Source: https://www.nasdaq.com/")  +
theme(plot.title= element_text(hjust= 0.5),
plot.subtitle= element_text(hjust= 0.5),
axis.text.x= element_text(angle = 45, hjust= 1)) +
scale_x_date(limits = c(min(tesla$date), max(tesla$date)),
breaks = seq(min(tesla$date), max(tesla$date), by = 7) )
ggplot(tesla, aes(x=date, y=return)) +
geom_line() +
theme(legend.position= "bottom") +
labs(title = "Tesla returns",
subtitle = "(daily)",
x = "Date",
y = "Percent",
caption = "Source: https://www.nasdaq.com/")  +
theme(plot.title= element_text(hjust= 0.5),
plot.subtitle= element_text(hjust= 0.5),
axis.text.x= element_text(angle = 45, hjust= 1)) +
scale_x_date(limits = c(min(tesla$date), max(tesla$date)),
breaks = seq(min(tesla$date), max(tesla$date), by = 7) )
library(ggplot2)
library(plotly)
ggplot(tesla, aes(x=date, y=return)) +
geom_line() +
theme(legend.position= "bottom") +
labs(title = "Tesla returns",
subtitle = "(daily)",
x = "Date",
y = "Percent",
caption = "Source: https://www.nasdaq.com/")  +
theme(plot.title= element_text(hjust= 0.5),
plot.subtitle= element_text(hjust= 0.5),
axis.text.x= element_text(angle = 45, hjust= 1)) +
scale_x_date(limits = c(min(tesla$date), max(tesla$date)),
breaks = seq(min(tesla$date), max(tesla$date), by = 7) )
seq(min(tesla$date), max(tesla$date)
ggplot(tesla, aes(x=date, y=return)) +
ggplot(tesla, aes(x=date, y=return)) +
geom_line() +
theme(legend.position= "bottom") +
labs(title = "Tesla returns",
subtitle = "(daily)",
x = "Date",
y = "Percent",
caption = "Source: https://www.nasdaq.com/")  +
theme(plot.title= element_text(hjust= 0.5),
plot.subtitle= element_text(hjust= 0.5),
axis.text.x= element_text(angle = 45, hjust= 1)) +
scale_x_date(limits = c(min(tesla$date), max(tesla$date)),
breaks = seq(min(tesla$date), max(tesla$date), by = 7) )
seq(min(tesla$date), max(tesla$date
seq(min(tesla$date), max(tesla$date)
ggplot(tesla, aes(x=date, y=return)) +
geom_line() +
theme(legend.position= "bottom") +
labs(title = "Tesla returns",
subtitle = "(daily)",
x = "Date",
y = "Percent",
caption = "Source: https://www.nasdaq.com/")  +
theme(plot.title= element_text(hjust= 0.5),
plot.subtitle= element_text(hjust= 0.5),
axis.text.x= element_text(angle = 45, hjust= 1)) +
scale_x_date(limits = c(min(tesla$date), max(tesla$date)),
breaks = seq(min(tesla$date), max(tesla$date), by = 7) )
ggplot(tesla, aes(x = date, y = `return`)) +
geom_line() +
theme(legend.position = "bottom") +
labs(title = "Tesla returns",
subtitle = "(daily)",
x = "Date",
y = "Percent",
caption = "Source: https://www.nasdaq.com/")  +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_date(limits = c(min(tesla$date), max(tesla$date)),
breaks = seq(min(tesla$date), max(tesla$date), by = 7))
tesla$date = as.Date(tesla$Date, "%Y/%m/%D")
tesla <- tesla[order(tesla$date), ]
tesla$price = tesla$`Close/Last`
library(dplyr)
tesla$lag1_price = lag(tesla$price, n=1, order_by = tesla$date)
tesla$return = ((tesla$price - tesla$lag1_price)/tesla$lag1_price)*100
ggplot(tesla, aes(x=date, y=return)) +
geom_line() +
theme(legend.position= "bottom") +
labs(title = "Tesla returns",
subtitle = "(daily)",
x = "Date",
y = "Percent",
caption = "Source: https://www.nasdaq.com/")  +
theme(plot.title= element_text(hjust= 0.5),
plot.subtitle= element_text(hjust= 0.5),
axis.text.x= element_text(angle = 45, hjust= 1)) +
scale_x_date(limits = c(min(tesla$date), max(tesla$date)),
breaks = seq(min(tesla$date), max(tesla$date), by = 7) )
stem(tesla$return, scale = 3)
colors()
summary(tesla$return)
hist(tesla$return,
labels = TRUE,
breaks=round(max(tesla$return, na.rm=TRUE) - min(tesla$return, na.rm=TRUE), 0),
xlim=c(min(floor(tesla$return), na.rm=TRUE),round(max(tesla$return, na.rm = TRUE),0)),
col="lightblue",
ylim=c(0,40),
xlab="Return (%)",
ylab="Frequency",
main="Distribution returns for Tesla" )
h_tesla = hist(tesla$return,
probability = TRUE,
breaks=round(max(tesla$return, na.rm=TRUE) - min(tesla$return, na.rm=TRUE), 0),
xlim=c(min(floor(tesla$return), na.rm=TRUE),round(max(tesla$return, na.rm = TRUE),0)),
col="lightblue",
xlab="Return (%)",
ylab="Probability",
main="Distribution returns for Tesla")
names(h_tesla)
hist(tesla$return,
probability = TRUE,
breaks=round(max(tesla$return, na.rm=TRUE) - min(tesla$return, na.rm=TRUE), 0),
xlim=c(min(floor(tesla$return), na.rm=TRUE),round(max(tesla$return, na.rm = TRUE),0)),
col="lightblue",
xlab="Return (%)",
ylab="Probability",
main="Distribution returns for Tesla")
# Add labels to the bars
text(x = h_tesla$mids, y = h_tesla$density, labels = round(h_tesla$density,3), adj = 1, cex = 1.5, srt = 90)
amazon <- read_excel("Lesson01-Amazon.xlsx")
amazon$date = as.Date(amazon$Date, "%Y/%m/%d")
amazon <- amazon[order(amazon$date), ]
amazon$price = amazon$`Close/Last`
amazon$lag1_price = lag(amazon$price, n=1, order_by = amazon$date)
amazon$return = ((amazon$price - amazon$lag1_price)/amazon$lag1_price)*100
# Visualizing
range(amazon$date)
### Line graph
ggplot(amazon, aes(x=date, y=return)) +
geom_line() +
theme(legend.position= "bottom") +
labs(title = "Amazon daily returns",
subtitle = "(rounded)",
x = "Date",
y = "Percent",
caption = "Source: https://www.nasdaq.com/")  +
theme(plot.title= element_text(hjust= 0.5),
plot.subtitle= element_text(hjust= 0.5),
axis.text.x= element_text(angle = 45, hjust= 1)) +
scale_x_date(limits = c(min(amazon$date), max(amazon$date)),
breaks = seq(min(amazon$date), max(amazon$date), by = 7) )
# Stem-and-leaf
stem(amazon$return, scale = 3)
# Histogram - Frequency
colors()
hist(amazon$return,
labels = TRUE,
breaks=round(max(amazon$return, na.rm=TRUE) - min(amazon$return, na.rm=TRUE), 0),
xlim=c(min(floor(amazon$return), na.rm=TRUE),round(max(amazon$return, na.rm = TRUE),0)),
col="lightblue",
xlab="Return (%)",
ylab="Frequency",
main="Distribution returns for amazon" )
h_amazon = hist(amazon$return,
probability = TRUE,
breaks=round(max(amazon$return, na.rm=TRUE) - min(amazon$return, na.rm=TRUE), 0),
xlim=c(min(floor(amazon$return), na.rm=TRUE),round(max(amazon$return, na.rm = TRUE),0)),
col="lightblue",
xlab="Return (%)",
ylab="Probability",
main="Distribution returns for amazon")
names(h_amazon)
hist(amazon$return,
probability = TRUE,
breaks=round(max(amazon$return, na.rm=TRUE) - min(amazon$return, na.rm=TRUE), 0),
xlim=c(min(floor(amazon$return), na.rm=TRUE),round(max(amazon$return, na.rm = TRUE),0)),
col="lightblue",
xlab="Return (%)",
ylab="Probability",
main="Distribution returns for amazon")
text(x = h_amazon$mids, y = h_amazon$density, labels = round(h_amazon$density,3), adj = 1, cex = 1.5, srt = 90)
microsoft <- read_excel("Lesson01-Microsoft.xlsx")
microsoft$date = as.Date(microsoft$Date, "%Y/%m/%d")
microsoft <- microsoft[order(microsoft$date), ]
microsoft$price = microsoft$`Close/Last`
microsoft$lag1_price = lag(microsoft$price, n=1, order_by = microsoft$date)
microsoft$return = ((microsoft$price - microsoft$lag1_price)/microsoft$lag1_price)*100
# Visualizing
range(microsoft$date)
### Line graph
ggplot(microsoft, aes(x=date, y=return)) +
geom_line() +
theme(legend.position= "bottom") +
labs(title = "Microsoft returns",
subtitle = "(daily)",
x = "Date",
y = "Percent",
caption = "Source: https://www.nasdaq.com/")  +
theme(plot.title= element_text(hjust= 0.5),
plot.subtitle= element_text(hjust= 0.5),
axis.text.x= element_text(angle = 45, hjust= 1)) +
scale_x_date(limits = c(min(microsoft$date), max(microsoft$date)),
breaks = seq(min(microsoft$date), max(microsoft$date), by = 7) )
### Line graph
ggplot(amazon, aes(x=date, y=return)) +
geom_line() +
theme(legend.position= "bottom") +
labs(title = "Amazon daily returns",
subtitle = "(rounded)",
x = "Date",
y = "Percent",
caption = "Source: https://www.nasdaq.com/")  +
theme(plot.title= element_text(hjust= 0.5),
plot.subtitle= element_text(hjust= 0.5),
axis.text.x= element_text(angle = 45, hjust= 1)) +
scale_x_date(limits = c(min(amazon$date), max(amazon$date)),
breaks = seq(min(amazon$date), max(amazon$date), by = 7) )
hist(amazon$return,
labels = TRUE,
breaks=round(max(amazon$return, na.rm=TRUE) - min(amazon$return, na.rm=TRUE), 0),
xlim=c(min(floor(amazon$return), na.rm=TRUE),round(max(amazon$return, na.rm = TRUE),0)),
col="lightblue",
xlab="Return (%)",
ylab="Frequency",
main="Distribution returns for amazon" )
hist(microsoft$return,
labels = TRUE,
breaks=round(max(microsoft$return, na.rm=TRUE) - min(microsoft$return, na.rm=TRUE), 0),
xlim=c(min(floor(microsoft$return), na.rm=TRUE),round(max(microsoft$return, na.rm = TRUE),0)),
col="lightblue",
xlab="Return (%)",
ylab="Frequency",
main="Distribution returns for microsoft" )
h_microsoft = hist(microsoft$return,
probability = TRUE,
breaks=round(max(microsoft$return, na.rm=TRUE) - min(microsoft$return, na.rm=TRUE), 0),
xlim=c(min(floor(microsoft$return), na.rm=TRUE),round(max(microsoft$return, na.rm = TRUE),0)),
col="lightblue",
xlab="Return (%)",
ylab="Probability",
main="Distribution returns for microsoft")
names(h_microsoft)
hist(microsoft$return,
probability = TRUE,
breaks=round(max(microsoft$return, na.rm=TRUE) - min(microsoft$return, na.rm=TRUE), 0),
xlim=c(min(floor(microsoft$return), na.rm=TRUE),round(max(microsoft$return, na.rm = TRUE),0)),
col="lightblue",
xlab="Return (%)",
ylab="Probability",
main="Distribution returns for microsoft")
text(x = h_microsoft$mids, y = h_microsoft$density, labels = round(h_microsoft$density,3), adj = 1, cex = 1.5, srt = 90)
summary(amazon$return)
summary(microsoft$return)
summary(tesla$return)
table1 = data.frame(stock = c("Amazon", "Microsoft", "Tesla"),
mean_r = c(mean(amazon$return, na.rm = TRUE),
mean(microsoft$return, na.rm = TRUE),
mean(tesla$return, na.rm = TRUE)),
var_r = c(var(amazon$return, na.rm = TRUE),
var(microsoft$return, na.rm = TRUE),
var(tesla$return, na.rm = TRUE)),
std_r = c(sd(amazon$return, na.rm = TRUE),
sd(microsoft$return, na.rm = TRUE),
sd(tesla$return, na.rm = TRUE)))
table1
table1$cv = table1$std_r / table1$mean_r
table1
quantile(amazon$return, c(.25,.5,.75,.9), type=2, na.rm = TRUE)
quantile(microsoft$return, c(.25,.5,.75,.9), type=2, na.rm = TRUE)
quantile(tesla$return, c(.25,.5,.75,.9), type=2, na.rm = TRUE)
boxplot(amazon$return, horizontal = FALSE,
frame.plot = FALSE,
main="Modified boxplot")
amazon$stock = "Amazon"
microsoft$stock = "Microsoft"
tesla$stock = "Tesla"
library(gtools)
install.packages("gtools")
library(gtools)
amazon = data.frame(amazon)
microsoft = data.frame(microsoft)
tesla = data.frame(tesla)
mydata = smartbind(amazon, microsoft, tesla)
boxplot(return ~ stock, data = mydata, horizontal = FALSE,
frame.plot = FALSE,
main="Modified boxplot")
ggplot(amazon, aes(x = date, y = return)) +
geom_line(color = "lightblue") +
labs(title = "Daily return - Amazon",
y = "Return (%)",
x = "Date",
caption = "Source: https://www.nasdaq.com/") +
geom_hline(yintercept = mean(amazon$return, na.rm = TRUE),
linetype = 1,
size = 1,
color = "black") +
geom_hline(yintercept = mean(amazon$return, na.rm = TRUE)+sd(amazon$return, na.rm = TRUE)*2,
linetype = 3,
size = 1,
color = "black") +
geom_hline(yintercept = mean(amazon$return, na.rm = TRUE)-sd(amazon$return, na.rm = TRUE)*2,
linetype = 3,
size = 1,
color = "black") +
annotate(geom="text",
x=min(amazon$date, na.rm = TRUE),
y=mean(amazon$return, na.rm = TRUE)+0.33,
label=paste("Mean =",round(mean(amazon$return, na.rm = TRUE),3)),
color="red",
hjust = 0) +
annotate(geom="text",
x=min(amazon$date, na.rm = TRUE),
y=mean(amazon$return, na.rm = TRUE)+sd(amazon$return, na.rm = TRUE)*2+0.33,
label=paste("Upper control limit =",
round(mean(amazon$return, na.rm = TRUE)+sd(amazon$return, na.rm = TRUE)*2,3)),
color="red",
hjust = 0) +
annotate(geom="text",
x=min(amazon$date, na.rm = TRUE),
y=mean(amazon$return, na.rm = TRUE)-sd(amazon$return, na.rm = TRUE)*2+0.33,
label=paste("Lower control limit =",
round(mean(amazon$return, na.rm = TRUE)-sd(amazon$return, na.rm = TRUE)*2,3)),
color="red",
hjust = 0) +
scale_y_continuous(limits = c(min(amazon$return, na.rm = TRUE), max(amazon$return, na.rm = TRUE)),
breaks = seq(min(round(amazon$return,0), na.rm = TRUE), max(round(amazon$return, 0), na.rm = TRUE), by = 1)) +
scale_x_continuous(limits = c(min(amazon$date), max(amazon$date)),
breaks = seq(min(amazon$date), max(amazon$date), by = 7)) +
theme(plot.title= element_text(hjust= 0.5),
axis.text.x= element_text(angle = 45, hjust= 1))
ggplot(microsoft, aes(x = date, y = return)) +
geom_line(color = "lightblue") +
labs(title = "Daily return - Microsoft",
y = "Return (%)",
x = "Date",
caption = "Source: https://www.nasdaq.com/") +
geom_hline(yintercept = mean(microsoft$return, na.rm = TRUE),
linetype = 1,
size = 1,
color = "black") +
geom_hline(yintercept = mean(microsoft$return, na.rm = TRUE)+sd(microsoft$return, na.rm = TRUE)*2,
linetype = 3,
size = 1,
color = "black") +
geom_hline(yintercept = mean(microsoft$return, na.rm = TRUE)-sd(microsoft$return, na.rm = TRUE)*2,
linetype = 3,
size = 1,
color = "black") +
annotate(geom="text",
x=min(microsoft$date, na.rm = TRUE),
y=mean(microsoft$return, na.rm = TRUE)+0.33,
label=paste("Mean =",round(mean(microsoft$return, na.rm = TRUE),3)),
color="red",
hjust = 0) +
annotate(geom="text",
x=min(microsoft$date, na.rm = TRUE),
y=mean(microsoft$return, na.rm = TRUE)+sd(microsoft$return, na.rm = TRUE)*2+0.33,
label=paste("Upper control limit =",
round(mean(microsoft$return, na.rm = TRUE)+sd(microsoft$return, na.rm = TRUE)*2,3)),
color="red",
hjust = 0) +
annotate(geom="text",
x=min(microsoft$date, na.rm = TRUE),
y=mean(microsoft$return, na.rm = TRUE)-sd(microsoft$return, na.rm = TRUE)*2+0.33,
label=paste("Lower control limit =",
round(mean(microsoft$return, na.rm = TRUE)-sd(microsoft$return, na.rm = TRUE)*2,3)),
color="red",
hjust = 0) +
scale_y_continuous(limits = c(min(microsoft$return, na.rm = TRUE), max(microsoft$return, na.rm = TRUE)),
breaks = seq(min(round(microsoft$return,0), na.rm = TRUE), max(round(microsoft$return, 0), na.rm = TRUE), by = 1)) +
scale_x_continuous(limits = c(min(microsoft$date), max(microsoft$date)),
breaks = seq(min(microsoft$date), max(microsoft$date), by = 7)) +
theme(plot.title= element_text(hjust= 0.5),
axis.text.x= element_text(angle = 45, hjust= 1))
ggplot(tesla, aes(x = date, y = return)) +
geom_line(color = "lightblue") +
labs(title = "Daily return - tesla",
y = "Return (%)",
x = "Date",
caption = "Source: https://www.nasdaq.com/") +
geom_hline(yintercept = mean(tesla$return, na.rm = TRUE),
linetype = 1,
size = 1,
color = "black") +
geom_hline(yintercept = mean(tesla$return, na.rm = TRUE)+sd(tesla$return, na.rm = TRUE)*2,
linetype = 3,
size = 1,
color = "black") +
geom_hline(yintercept = mean(tesla$return, na.rm = TRUE)-sd(tesla$return, na.rm = TRUE)*2,
linetype = 3,
size = 1,
color = "black") +
annotate(geom="text",
x=min(tesla$date, na.rm = TRUE),
y=mean(tesla$return, na.rm = TRUE)+0.66,
label=paste("Mean =",round(mean(tesla$return, na.rm = TRUE),3)),
color="red",
hjust = 0) +
annotate(geom="text",
x=min(tesla$date, na.rm = TRUE),
y=mean(tesla$return, na.rm = TRUE)+sd(tesla$return, na.rm = TRUE)*2+0.66,
label=paste("Upper control limit =",
round(mean(tesla$return, na.rm = TRUE)+sd(tesla$return, na.rm = TRUE)*2,3)),
color="red",
hjust = 0) +
annotate(geom="text",
x=min(tesla$date, na.rm = TRUE),
y=mean(tesla$return, na.rm = TRUE)-sd(tesla$return, na.rm = TRUE)*2+0.66,
label=paste("Lower control limit =",
round(mean(tesla$return, na.rm = TRUE)-sd(tesla$return, na.rm = TRUE)*2,3)),
color="red",
hjust = 0) +
scale_y_continuous(limits = c(min(tesla$return, na.rm = TRUE), max(tesla$return, na.rm = TRUE)),
breaks = seq(min(round(tesla$return,0), na.rm = TRUE), max(round(tesla$return, 0), na.rm = TRUE), by = 1)) +
scale_x_continuous(limits = c(min(tesla$date), max(tesla$date)),
breaks = seq(min(tesla$date), max(tesla$date), by = 7)) +
theme(plot.title= element_text(hjust= 0.5),
axis.text.x= element_text(angle = 45, hjust= 1))
